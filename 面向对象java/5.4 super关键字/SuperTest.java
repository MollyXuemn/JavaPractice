/**
 * super关键字的使用：
 * 1. super理解为：父类的
 * 2. super可以用来调用：属性、方法、构造器
 * 
 * 3. super使用：
 *    3.1  我们可以在子类的方法或构造其中，通过使用“super.属性”或“super.方法”
 *    的方式，显式的调用
 *    3.2 特殊情况：当子类和父类中定义了同名的属性时，我们想要在子类中调用
 *    父类中声明的属性，则必须显式的使用“super.属性”的方式，表明调用的是
 *    父类中的属性。
 *    3.3 特殊情况：当子类重写了父类中的方法后，在子类中调用父类被重写的方法时，
 *    必须显式的使用“super.方法”的方式，表明调用的是父类中被重写的方法。
 *
 * 4. super调用构造器
 *      4.1 我们可以在子类构造器中显式使用“super(形参列表)”的方式，调用父类中
 *      声明的指定的构造器
 *      4.2 “super(形参列表)”的使用，必须声明在子类构造器的首行！
 *      4.3 在类的构造器中，对于“this(形参列表)”或“super构造器中”只能二选一，
 *      不能同时存在
 *      4.4 在构造器首行既没有显示声明this 或 super，则默认调用的是父类中空参
 *      构造器：super（）   
 *      4.5 在类的多个构造器中，至少有一个类的构造器中使用了“super（形参列表）”，
 *      调用父类中的构造器
 */


public class SuperTest {
    public static void main(String[] args) {
        Student s = new Student();
        s.work();

        System.out.println("x");

        s.study();
        Student s1 = new Student("Tom", 21, "IT");
        s1.work();

    }
}
